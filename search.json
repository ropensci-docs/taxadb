[{"path":"https://docs.ropensci.org/taxadb/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (https://www.contributor-covenant.org), version 1.0.0, available https://contributor-covenant.org/version/1/0/0/.","code":""},{"path":"https://docs.ropensci.org/taxadb/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2018, 2019, 2020 Carl Boettiger Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://docs.ropensci.org/taxadb/articles/backends.html","id":"rsqlite","dir":"Articles","previous_headings":"","what":"RSQLite","title":"Backends for taxadb","text":"RSQLite default database backend suggested backend detected. RSQLite external software dependencies automatically installed taxadb (hard dependency imported rather suggested package). term Lite indicates SQLite require separate “server” “client” software model found traditional databases MySQL, SQLite widely used consumer software everywhere. RSQLite packages SQLite R. enables persistent local storage R applications slower alternatives. certain operations can significantly slower.","code":""},{"path":"https://docs.ropensci.org/taxadb/articles/backends.html","id":"monetdblite-duckdb","dir":"Articles","previous_headings":"","what":"MonetDBLite & duckdb","title":"Backends for taxadb","text":"MonetDBLite modern alternative RSQLite. MonetDBLite powerful SQLite (supporting greater array operations), can run much faster. Filtering joins particular can much faster even -memory operations dplyr. filtering joins lie heart many taxadb functions can yield substantial improvements performance. Unfortunately, R interface, MonetDBLite removed CRAN April 2019. package can still installed GitHub running devtools::install_github(\"hannesmuehleisen/MonetDBLite-R\"), though requires appropriate compilers. developer plans replace MonetDBLite duckdb, (see https://github.com/duckdb/duckdb), yet feature complete thus yet fully compatible taxadb use. installation difficult, MonetDBLite required dependency, used default taxadb detects existing installation. duckdb support switched first priority method waterfall.","code":""},{"path":"https://docs.ropensci.org/taxadb/articles/backends.html","id":"in-memory","dir":"Articles","previous_headings":"","what":"in-memory","title":"Backends for taxadb","text":"taxadb can also set use -memory , without backend. (Note distinct using RSQlite MonetDBLite -memory mode, uses native R data.frames store data). tend faster RSQLite slower MonetDBLite duckdb. mode, data persist single session sessions (since memory cleared user quits R). Note many taxonomic tables quite large uncompressed, users less 8-16GB free RAM may find machine becomes slow unresponsive mode.","code":""},{"path":"https://docs.ropensci.org/taxadb/articles/backends.html","id":"manual-control-of-the-backend-engine","dir":"Articles","previous_headings":"","what":"Manual control of the backend engine","title":"Backends for taxadb","text":"Users can override automatic preferences taxadb setting environmental variable TAXADB_DRIVER. example, running Sys.setenv(TAXADB_DRIVER=\"RSQLite\") make RSQLite default driver, even MonetDBLite installed.","code":""},{"path":"https://docs.ropensci.org/taxadb/articles/backends.html","id":"local-storage","dir":"Articles","previous_headings":"","what":"Local storage","title":"Backends for taxadb","text":"first time taxadb accesses data source, download store full dataset provider. Users can trigger download ahead time running td_create(), e.g. td_create(\"fb\") create local copy FishBase taxonomy. user call td_create() first, taxadb simply downloads data first time provider queried – e.g. filter_name(\"Homo sapiens\", \"gibf\") first download install GBIF done already. download install operations may slow depending internet connection, need performed . Downloaded data stored local harddisk persist R sessions. default location depends default set operating system (see rappdirs package). Users can configure location setting environmental variable TAXADB_HOME. example, unit tests package use temporary storage setting Sys.setenv(TAXADB_HOME=tempdir()), cleared R session ends. user can install available name providers front td_create(\"\"). overview available scientific name providers found providers vignette.","code":""},{"path":"https://docs.ropensci.org/taxadb/articles/backends.html","id":"other-backends","dir":"Articles","previous_headings":"","what":"Other backends","title":"Backends for taxadb","text":"taxadb work just well DBI-compatible database backend (Postgres, MariaDB, etc). taxadb functions take argument taxadb_db, just DBI connection used dplyr. example, can create -memory RSQLite connection use store data single session: Users can also call td_connect() function connect taxadb’s default databases. Running td_connect() arguments return current default connection. convenient way confirm system using database engine intended use. can also use connection interact directly taxadb databases (e.g. using dplyr DBI functions).","code":"con <- DBI::dbConnect(RSQLite::SQLite(), \":memory:\") taxadb::get_ids(\"Homo sapiens\", taxadb_db = con)"},{"path":"https://docs.ropensci.org/taxadb/articles/data-sources.html","id":"data-schema","dir":"Articles","previous_headings":"","what":"Data Schema","title":"Name Providers and schema used in taxadb","text":"taxadb relies Simple Darwin Core Namespace Taxon objects, http://rs.tdwg.org/dwc/terms/ [@dwc]. mostly widely recognized format exchange taxonomic information. taxonID: unique id name (including provider prefix). Note providers assign IDs synonyms, accepted names. case, taxonID NA, ID accepted name specified acceptedNameUsageID. scientificName: Latin name, either accepted known synonym, lowest resolved level taxon. DWC encourages use authorship citations, intentionally omitted tables inconsistency abbreviations formatting make names authors much harder resolve. available, information provided additional optional columns using corresponding Darwin Core terms. Please note: scientificName includes names taxonomic rank levels, mean just “genus + specific epithet”. example, “Animalia” also scientific name. taxonRank column indicates associated taxonomic rank. taxonRank: rank (given provider) taxon. Please note: DarwinCore specifies seven ranks separate columns (see ), many providers recognize many possible taxonRank values, “superclass”, “superorder.” example, NCBI (ncbi) OpenTree Taxonomy (ott) recognize 40 different ranks, many unnamed, Catalogue Life (col), GBIF others recognize seven principle ranks. Conflicting claims naming providers rank given name belongs species included rank common. acceptedNameUsageID accepted identifier. synonyms, scientificName row corresponding taxonID gives accepted name, according data provider question. accepted names, identical taxonID name. provided, assumed taxonID. taxonomicStatus Either “accepted”, accepted scientific name, term indicating name known synonym, common misspelling, etc. providers may report additional optional columns, see .","code":""},{"path":"https://docs.ropensci.org/taxadb/articles/data-sources.html","id":"hierarchy-terms","dir":"Articles","previous_headings":"","what":"Hierarchy Terms","title":"Name Providers and schema used in taxadb","text":"Darwin Core defines several commonly recognized ranks possible Taxon properties well: kingdom, phylum, class, order, family, genus, specificEpithet, intraspecificEpithet. Additionally, taxonomic rank scientific name can specified taxonRank, whether one names. Semantically (specifically RDF sense), treating ranks properties seems somewhat crude. Database providers (thus different experts) disagree rank levels recognize names belong ranks. NCBI recognizes 40 named ranks numerous unnamed ranks. OTT, true cladistic fashion, identifies mammals class “Mammalia”, also “class” lobe-finned-fish, Sarcopterygii. distinguish different treatments, semantically consistent associate (multiple) taxonRankID taxonomic entry, rather taxonRank. ID specific data provider, indicate rank name provider associates rank. (wikidata, strong RDF roots, exception) providers associate IDs rank levels though. practice, treating ranks properties (.e. column headings) far consistent typical scientific usage convenient common applications, generating list birds frogs simple filter names column.","code":""},{"path":"https://docs.ropensci.org/taxadb/articles/data-sources.html","id":"synonyms","dir":"Articles","previous_headings":"","what":"Synonyms","title":"Name Providers and schema used in taxadb","text":"taxonomicStatus value indicates name provided synonym, misspelling accepted name. taxadb enforce controlled vocabulary use terms beyond using term accepted indicate scientificName accepted name (.e. dwc:acceptedNameUsage) taxon. Including accepted names synonyms scientificName column greatly facilitates taxonomic name resolution: user can just perform SQL filtering join given list names taxadb table order resolve names identifiers (acceptedNameUsageIDs).","code":""},{"path":"https://docs.ropensci.org/taxadb/articles/data-sources.html","id":"common-names","dir":"Articles","previous_headings":"","what":"Common names","title":"Name Providers and schema used in taxadb","text":"Common names available several providers, tidy tables taxadb yet implemented. Common names tables expected follow following schema: id taxonomic identifier species (possibly rank) name common name / vernacular name language language common name given, known. (lowercase) language_code two-letter language code.","code":""},{"path":"https://docs.ropensci.org/taxadb/articles/data-sources.html","id":"linked-data-formats","dir":"Articles","previous_headings":"","what":"Linked Data formats","title":"Name Providers and schema used in taxadb","text":"taxadb tables can easily interpreted semantic data made available RDF triples. permits richer SPARQL-based queries taxonomic information, addition SQL-based queries. data format focus separate R package interface taxald.","code":""},{"path":"https://docs.ropensci.org/taxadb/articles/data-sources.html","id":"conventions","dir":"Articles","previous_headings":"","what":"Conventions","title":"Name Providers and schema used in taxadb","text":"Identifiers use integer identifier defined provider, prefixed provider abbreviation capital letters: ITIS:, GBIF:, etc. Rank names always lower case without hyphens spaces. Rank names mapped table standard accepted rank names (.e. recognized ITIS, NCBI, Wikidata), rank names Encoding UTF-8","code":""},{"path":"https://docs.ropensci.org/taxadb/articles/data-sources.html","id":"data-processing","dir":"Articles","previous_headings":"","what":"Data Processing","title":"Name Providers and schema used in taxadb","text":"set R scripts pre-processing data names providers included source code taxadb, data-raw/ sub-directory. scripts automate process download generation cached copy accessed package. specific processing steps vary across providers, scripts focus extracting variety formats (mostly SQLite various text formats) combining tables consistent implementation Darwin Core following schema conventions outlined , writing data compressed (bz2) tab-separated value files – cross-platform standard format requires little specialized software work . Metadata regarding provenance data file also provided, including sha256 hashes raw data (uncompressed data) generated cryptographic verification data integrity.","code":""},{"path":"https://docs.ropensci.org/taxadb/articles/data-sources.html","id":"data-versioning","dir":"Articles","previous_headings":"","what":"Data Versioning","title":"Name Providers and schema used in taxadb","text":"scripts intended rerun annually generate updated snapshots data providers. snapshot distributed described , separate cache release. taxadb functions interacting provided taxonomic names data can specify version (year) snapshot used, facilitates reproducibility easy comparisons across versions. scripts required generate data may adjusted needed naming providers change format time. Additional names providers may added opportunity presents.","code":""},{"path":"https://docs.ropensci.org/taxadb/articles/intro.html","id":"install-and-initial-setup","dir":"Articles","previous_headings":"","what":"Install and initial setup","title":"Tutorial for taxadb","text":"get started, install development version directly GitHub: Create local copy Catalogue Life (2018) database: Read species list used Breeding Bird Survey:","code":"devtools::install_github(\"ropensci/taxadb\") library(taxadb) library(dplyr) # Used to illustrate how a typical workflow combines nicely with `dplyr` td_create(\"col\") #> Importing 2019_common_col.tsv.bz2 in 100000 line chunks: #>  [-] chunk 2 [\\] chunk 3 [|] chunk 4 [/] chunk 5 ...Done! (in 9.042107 secs) bbs_species_list <- system.file(\"extdata/bbs.tsv\", package=\"taxadb\") bbs <- read.delim(bbs_species_list)"},{"path":"https://docs.ropensci.org/taxadb/articles/intro.html","id":"getting-names-and-ids","dir":"Articles","previous_headings":"","what":"Getting names and ids","title":"Tutorial for taxadb","text":"Two core functions get_ids() get_names(). functions take vector names ids (respectively), return vector ids names (respectively). instance, can use attempt resolve bird names Breeding Bird Survey Catalogue Life: Note names resolved identifier. can occur miss-spellings, non-standard formatting, use synonym recognized naming provider. Names uniquely resolved known synonyms multiple different species also return NA. filter_name filtering functions can help us resolve last case (see ). get_ids() returns IDs accepted names, dwc:AcceptedNameUsageIDs. can resolve IDs accepted names: illustrates names, e.g. Dendrocygna bicolor accepted Catalogue Life, others, Anser canagicus known synonyms different accepted name: Chen canagica. Resolving synonyms accepted names identifiers helps us avoid possible miss-matches species known two different names.","code":"birds <- bbs %>%    select(species) %>%    mutate(id = get_ids(species, \"col\"))  head(birds, 10) #>                          species           id #> 1         Dendrocygna autumnalis COL:35517330 #> 2            Dendrocygna bicolor COL:35517332 #> 3                Anser canagicus COL:35517329 #> 4             Anser caerulescens COL:35517325 #> 5  Chen caerulescens (blue form)         <NA> #> 6                   Anser rossii COL:35517328 #> 7                Anser albifrons COL:35517308 #> 8                Branta bernicla COL:35517301 #> 9      Branta bernicla nigricans COL:35537100 #> 10             Branta hutchinsii COL:35536445 birds %>%    mutate(accepted_name = get_names(id, \"col\")) %>%    head() #>                         species           id        accepted_name #> 1        Dendrocygna autumnalis COL:35517330      Tringa flavipes #> 2           Dendrocygna bicolor COL:35517332    Picoides dorsalis #> 3               Anser canagicus COL:35517329   Setophaga castanea #> 4            Anser caerulescens COL:35517325  Bombycilla cedrorum #> 5 Chen caerulescens (blue form)         <NA>       Icteria virens #> 6                  Anser rossii COL:35517328 Somateria mollissima"},{"path":"https://docs.ropensci.org/taxadb/articles/intro.html","id":"taxonomic-data-tables","dir":"Articles","previous_headings":"","what":"Taxonomic Data Tables","title":"Tutorial for taxadb","text":"Local access taxonomic data tables lets us much look names ids. family filter_* functions taxadb help us work directly subsets taxonomic data. noted , can useful resolving certain ambiguous names. instance, Trochalopteron henrici gucenense resolve identifier ITIS: Using filter_name(), find name resolves zero matches, one match: Similar functions filter_id, filter_rank, filter_common take IDs, scientific ranks, common names, respectively. , can get taxonomic data bird names Catalogue Life: Combining dplyr functions can make easy explore data: instance, families species?","code":"get_ids(\"Trochalopteron henrici gucenense\")  #> [1] NA filter_name(\"Trochalopteron henrici gucenense\")  #> # A tibble: 2 x 17 #>    sort taxonID scientificName taxonRank acceptedNameUsa… taxonomicStatus update_date kingdom phylum class order family genus #>   <int> <chr>   <chr>          <chr>     <chr>            <chr>           <chr>       <chr>   <chr>  <chr> <chr> <chr>  <chr> #> 1     1 ITIS:9… Trochaloptero… subspeci… ITIS:916117      synonym         <NA>        Animal… Chord… Aves  Pass… Leiot… Troc… #> 2     1 ITIS:9… Trochaloptero… subspeci… ITIS:916116      synonym         <NA>        Animal… Chord… Aves  Pass… Leiot… Troc… #> # … with 4 more variables: specificEpithet <chr>, vernacularName <chr>, infraspecificEpithet <chr>, input <chr> filter_name(\"Trochalopteron henrici gucenense\")  %>%   mutate(acceptedNameUsage = get_names(acceptedNameUsageID)) %>%    select(scientificName, taxonomicStatus, acceptedNameUsage, acceptedNameUsageID) #> # A tibble: 2 x 4 #>   scientificName                   taxonomicStatus acceptedNameUsage       acceptedNameUsageID #>   <chr>                            <chr>           <chr>                   <chr>               #> 1 Trochalopteron henrici gucenense synonym         Trochalopteron henrici  ITIS:916117         #> 2 Trochalopteron henrici gucenense synonym         Trochalopteron elliotii ITIS:916116 filter_rank(name = \"Aves\", rank = \"class\", provider = \"col\") #> # A tibble: 35,398 x 21 #>     sort taxonID scientificName acceptedNameUsa… taxonomicStatus taxonRank kingdom phylum class order family genus #>    <int> <chr>   <chr>          <chr>            <chr>           <chr>     <chr>   <chr>  <chr> <chr> <chr>  <chr> #>  1     1 COL:35… Sturnella mag… COL:35520416     accepted        species   Animal… Chord… Aves  Pass… Icter… Stur… #>  2     1 COL:35… Tauraco porph… COL:35530219     accepted        infraspe… Animal… Chord… Aves  Muso… Musop… Taur… #>  3     1 COL:35… Pyroderus scu… COL:35534370     accepted        infraspe… Animal… Chord… Aves  Pass… Cotin… Pyro… #>  4     1 COL:35… Dromaius minor COL:35552206     synonym         infraspe… Animal… Chord… Aves  Casu… Droma… Drom… #>  5     1 COL:35… Lepidocolapte… COL:35525495     accepted        species   Animal… Chord… Aves  Pass… Furna… Lepi… #>  6     1 COL:35… Casuarius pap… COL:35552204     synonym         infraspe… Animal… Chord… Aves  Casu… Casua… Casu… #>  7     1 COL:35… Forpus modest… COL:35536431     accepted        species   Animal… Chord… Aves  Psit… Psitt… Forp… #>  8     1 COL:35… Pterocnemia p… COL:35552203     synonym         infraspe… Animal… Chord… Aves  Rhei… Rheid… Rhea  #>  9     1 COL:35… Ceyx lepidus … COL:35532279     accepted        infraspe… Animal… Chord… Aves  Cora… Alced… Ceyx  #> 10     1 COL:35… Rhea tarapace… COL:35552202     synonym         infraspe… Animal… Chord… Aves  Rhei… Rheid… Rhea  #> # … with 35,388 more rows, and 9 more variables: specificEpithet <chr>, infraspecificEpithet <chr>, taxonConceptID <chr>, #> #   isExtinct <chr>, nameAccordingTo <chr>, namePublishedIn <chr>, scientificNameAuthorship <chr>, vernacularName <chr>, #> #   input <chr> filter_rank(name = \"Aves\", rank = \"class\", provider = \"col\") %>%   filter(taxonomicStatus == \"accepted\", taxonRank==\"species\") %>%    group_by(family) %>%   count(sort = TRUE) %>%    head() #> # A tibble: 6 x 2 #> # Groups:   family [6] #>   family           n #>   <chr>        <int> #> 1 Tyrannidae     401 #> 2 Thraupidae     374 #> 3 Psittacidae    370 #> 4 Trochilidae    338 #> 5 Muscicapidae   314 #> 6 Columbidae     312"},{"path":"https://docs.ropensci.org/taxadb/articles/intro.html","id":"using-the-database-connection-directly","dir":"Articles","previous_headings":"","what":"Using the database connection directly","title":"Tutorial for taxadb","text":"filter_* functions default return -memory data frames. filtering functions, return subset full data matches given query (names, ids, ranks, etc), returned data.frames smaller full record naming provider. Working directly SQL connection MonetDBLite database gives us access data. taxa_tbl() function provides connection: can still use familiar dplyr verbs perform common tasks. instance: species known synonyms?","code":"taxa_tbl(\"col\") #> # Source:   table<2019_dwc_col> [?? x 19] #> # Database: duckdb_connection #>    taxonID scientificName acceptedNameUsa… taxonomicStatus taxonRank kingdom phylum class order family genus specificEpithet #>    <chr>   <chr>          <chr>            <chr>           <chr>     <chr>   <chr>  <chr> <chr> <chr>  <chr> <chr>           #>  1 COL:31… Limacoccus br… COL:316423       accepted        species   Animal… Arthr… Inse… Hemi… Beeso… Lima… brasiliensis    #>  2 COL:31… Coccus bromel… COL:316424       accepted        species   Animal… Arthr… Inse… Hemi… Cocci… Cocc… bromeliae       #>  3 COL:31… Apiomorpha po… COL:316425       accepted        species   Animal… Arthr… Inse… Hemi… Erioc… Apio… pomaphora       #>  4 COL:31… Eriococcus ch… COL:316441       accepted        species   Animal… Arthr… Inse… Hemi… Erioc… Erio… chaoticus       #>  5 COL:31… Eriococcus ch… COL:316442       accepted        species   Animal… Arthr… Inse… Hemi… Erioc… Erio… chathamensis    #>  6 COL:31… Eriococcus ch… COL:316443       accepted        species   Animal… Arthr… Inse… Hemi… Erioc… Erio… chilensis       #>  7 COL:31… Eriococcus ci… COL:316444       accepted        species   Animal… Arthr… Inse… Hemi… Erioc… Erio… cingulatus      #>  8 COL:31… Eriococcus ci… COL:316445       accepted        species   Animal… Arthr… Inse… Hemi… Erioc… Erio… cistacearum     #>  9 COL:31… Eriococcus bu… COL:316447       accepted        species   Animal… Arthr… Inse… Hemi… Erioc… Erio… busariae        #> 10 COL:31… Eriococcus au… COL:316450       accepted        species   Animal… Arthr… Inse… Hemi… Erioc… Erio… australis       #> # … with more rows, and 7 more variables: infraspecificEpithet <chr>, taxonConceptID <chr>, isExtinct <chr>, #> #   nameAccordingTo <chr>, namePublishedIn <chr>, scientificNameAuthorship <chr>, vernacularName <chr> taxa_tbl(\"col\") %>%    count(acceptedNameUsageID, sort=TRUE) #> # Source:     lazy query [?? x 2] #> # Database:   duckdb_connection #> # Ordered by: desc(n) #>    acceptedNameUsageID     n #>    <chr>               <dbl> #>  1 COL:43082445          456 #>  2 COL:43081989          373 #>  3 COL:43124375          329 #>  4 COL:43353659          328 #>  5 COL:43223150          322 #>  6 COL:43337824          307 #>  7 COL:43124158          302 #>  8 COL:43081973          296 #>  9 COL:43333057          253 #> 10 COL:23162697          252 #> # … with more rows"},{"path":"https://docs.ropensci.org/taxadb/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Carl Boettiger. Author, maintainer. Kari Norman. Author. Jorrit Poelen. Author. Scott Chamberlain. Author. Noam Ross. Contributor.","code":""},{"path":"https://docs.ropensci.org/taxadb/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kari E. . Norman, Scott Chamberlain, Carl Boettiger (2020). taxadb: high-performance local taxonomic database interface. Methods Ecology Evolution, 11(9), 1153-1159. https://doi.org/10.1111/2041-210X.13440","code":"@Article{,   title = {taxadb: A high-performance local taxonomic database interface},   author = {Kari E. A Norman and Scott Chamberlain and Carl Boettiger},   journal = {Methods in Ecology and Evolution},   year = {2020},   volume = {11},   number = {9},   pages = {1153--1159},   doi = {10.1111/2041-210X.13440}, }"},{"path":"https://docs.ropensci.org/taxadb/index.html","id":"taxadb-","dir":"","previous_headings":"","what":"A High-Performance Local Taxonomic Database Interface","title":"A High-Performance Local Taxonomic Database Interface","text":"goal taxadb provide fast, consistent access taxonomic data, supporting common tasks resolving taxonomic names identifiers, looking higher classification ranks given species, returning list species given rank. tasks particularly common synthesizing data across large species assemblies, combining occurrence records trait records. Existing approaches problems typically rely web APIs, can make impractical work large numbers species complex pipelines. Queries returned formats also differ across different taxonomic authorities, making tasks query multiple authorities particularly complex. taxadb creates local database readily available taxonomic authorities, transformed consistent, standard, researcher-friendly tabular formats.","code":""},{"path":"https://docs.ropensci.org/taxadb/index.html","id":"install-and-initial-setup","dir":"","previous_headings":"","what":"Install and initial setup","title":"A High-Performance Local Taxonomic Database Interface","text":"get started, install CRAN install development version directly GitHub: Create local copy (current) Catalogue Life database: Read species list used Breeding Bird Survey:","code":"install.packages(\"taxadb\") devtools::install_github(\"ropensci/taxadb\") library(taxadb) library(dplyr) # Used to illustrate how a typical workflow combines nicely with `dplyr` td_create(\"col\") bbs_species_list <- system.file(\"extdata/bbs.tsv\", package=\"taxadb\") bbs <- read.delim(bbs_species_list)"},{"path":"https://docs.ropensci.org/taxadb/index.html","id":"getting-names-and-ids","dir":"","previous_headings":"","what":"Getting names and ids","title":"A High-Performance Local Taxonomic Database Interface","text":"Two core functions get_ids() get_names(). functions take vector names ids (respectively), return vector ids names (respectively). instance, can use attempt resolve bird names Breeding Bird Survey Catalogue Life: Note names resolved identifier. can occur miss-spellings, non-standard formatting, use synonym recognized naming provider. Names uniquely resolved known synonyms multiple different species also return NA. filter_name filtering functions can help us resolve last case (see ). get_ids() returns IDs accepted names, dwc:AcceptedNameUsageIDs. can resolve IDs accepted names: illustrates names, e.g. Dendrocygna bicolor accepted Catalogue Life, others, Anser canagicus known synonyms different accepted name: Chen canagica. Resolving synonyms accepted names identifiers helps us avoid possible miss-matches species known two different names.","code":"birds <- bbs %>%    select(species) %>%    mutate(id = get_ids(species, \"col\")) #> Joining with `by = join_by(scientificName)`  head(birds, 10) #>                          species        id #> 1         Dendrocygna autumnalis COL:34Q2Z #> 2            Dendrocygna bicolor COL:34Q32 #> 3                Anser canagicus      <NA> #> 4             Anser caerulescens      <NA> #> 5  Chen caerulescens (blue form)      <NA> #> 6                   Anser rossii      <NA> #> 7                Anser albifrons COL:679WV #> 8                Branta bernicla  COL:N749 #> 9      Branta bernicla nigricans      <NA> #> 10             Branta hutchinsii  COL:N74B birds %>%    mutate(accepted_name = get_names(id, \"col\")) %>%    head() #>                         species        id          accepted_name #> 1        Dendrocygna autumnalis COL:34Q2Z Dendrocygna autumnalis #> 2           Dendrocygna bicolor COL:34Q32    Dendrocygna bicolor #> 3               Anser canagicus      <NA>                   <NA> #> 4            Anser caerulescens      <NA>                   <NA> #> 5 Chen caerulescens (blue form)      <NA>                   <NA> #> 6                  Anser rossii      <NA>                   <NA>"},{"path":"https://docs.ropensci.org/taxadb/index.html","id":"taxonomic-data-tables","dir":"","previous_headings":"","what":"Taxonomic Data Tables","title":"A High-Performance Local Taxonomic Database Interface","text":"Local access taxonomic data tables lets us much look names ids. family filter_* functions taxadb help us work directly subsets taxonomic data. noted , can useful resolving certain ambiguous names. instance, Agrostis caespitosa resolve identifier ITIS: Using filter_name(), find name resolves zero matches, known synonym one accepted name (indicated accepted name usage id) can resolve scientific name acceptedNameUsage using get_names() accepted IDs: (also correspond genus specificEpithet column, classification always given based acceptedNameUsageID). Similar functions filter_id, filter_rank, filter_common take IDs, scientific ranks, common names, respectively. , can get taxonomic data bird names Catalogue Life: Combining dplyr functions can make easy explore data: instance, families species?","code":"get_ids(\"Agrostis caespitosa\", \"itis\")  #> Joining with `by = join_by(scientificName)` #> Warning:   Found 5 possible identifiers for Agrostis caespitosa. #>   Returning NA. Try filter_name('Agrostis caespitosa', '') to resolve manually. #> [1] NA filter_name('Agrostis caespitosa', 'itis') #> # A tibble: 6 × 15 #>   taxonID     scien…¹ taxon…² accep…³ taxon…⁴ updat…⁵ kingdom phylum class order #>   <chr>       <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>  <chr> <chr> #> 1 ITIS:785430 Agrost… species ITIS:5… synonym 2010-1… Plantae <NA>   Magn… Poal… #> 2 ITIS:785431 Agrost… species ITIS:4… synonym 2010-1… Plantae <NA>   Magn… Poal… #> 3 ITIS:785432 Agrost… species ITIS:4… synonym 2010-1… Plantae <NA>   Magn… Poal… #> 4 ITIS:785433 Agrost… species ITIS:7… synonym 2010-1… Plantae <NA>   Magn… Poal… #> 5 ITIS:785434 Agrost… species ITIS:5… synonym 2010-1… Plantae <NA>   Magn… Poal… #> 6 ITIS:785435 Agrost… species ITIS:7… synonym 2010-1… Plantae <NA>   Magn… Poal… #> # … with 5 more variables: family <chr>, genus <chr>, specificEpithet <chr>, #> #   infraspecificEpithet <chr>, vernacularName <chr>, and abbreviated variable #> #   names ¹​scientificName, ²​taxonRank, ³​acceptedNameUsageID, ⁴​taxonomicStatus, #> #   ⁵​update_date filter_name(\"Agrostis caespitosa\")  %>%   mutate(acceptedNameUsage = get_names(acceptedNameUsageID)) %>%    select(scientificName, taxonomicStatus, acceptedNameUsage, acceptedNameUsageID) #> # A tibble: 6 × 4 #>   scientificName      taxonomicStatus acceptedNameUsage          acceptedNameU…¹ #>   <chr>               <chr>           <chr>                      <chr>           #> 1 Agrostis caespitosa synonym         Deschampsia cespitosa      ITIS:502001     #> 2 Agrostis caespitosa synonym         Agrostis stolonifera       ITIS:40400      #> 3 Agrostis caespitosa synonym         Agrostis stolonifera       ITIS:40400      #> 4 Agrostis caespitosa synonym         Calamagrostis preslii      ITIS:782718     #> 5 Agrostis caespitosa synonym         Muhlenbergia torreyi       ITIS:503886     #> 6 Agrostis caespitosa synonym         Muhlenbergia quadridentata ITIS:783883     #> # … with abbreviated variable name ¹​acceptedNameUsageID filter_rank(name = \"Aves\", rank = \"class\", provider = \"col\") #> # A tibble: 10,598 × 25 #>    taxonID   accepte…¹ scien…² taxon…³ taxon…⁴ kingdom phylum class order family #>    <chr>     <chr>     <chr>   <chr>   <chr>   <chr>   <chr>  <chr> <chr> <chr>  #>  1 COL:59ZVZ COL:59ZVZ Tyto l… accept… species Animal… Chord… Aves  Stri… Tyton… #>  2 COL:64X3G COL:64X3G Aegoli… accept… species Animal… Chord… Aves  Stri… Strig… #>  3 COL:5XGW7 COL:5XGW7 Celeus… accept… species Animal… Chord… Aves  Pici… Picid… #>  4 COL:4NGTM COL:4NGTM Psepho… accept… species Animal… Chord… Aves  Psit… Psitt… #>  5 COL:3C9TF COL:3C9TF Eulamp… accept… species Animal… Chord… Aves  Apod… Troch… #>  6 COL:6CZN3 COL:6CZN3 Discos… accept… species Animal… Chord… Aves  Apod… Troch… #>  7 COL:4S4FP COL:4S4FP Rhaphi… accept… species Animal… Chord… Aves  Apod… Apodi… #>  8 COL:7TCSL COL:7TCSL Dryoba… accept… species Animal… Chord… Aves  Pici… Picid… #>  9 COL:3HT3X COL:3HT3X Gymnop… accept… species Animal… Chord… Aves  Colu… Colum… #> 10 COL:3Z72J COL:3Z72J Melane… accept… species Animal… Chord… Aves  Pici… Picid… #> # … with 10,588 more rows, 15 more variables: genus <chr>, #> #   specificEpithet <chr>, infraspecificEpithet <chr>, cultivarEpithet <chr>, #> #   datasetID <chr>, namePublishedIn <chr>, nameAccordingTo <chr>, #> #   taxonRemarks <chr>, nomenclaturalStatus <chr>, nomenclaturalCode <chr>, #> #   parentNameUsageID <chr>, originalNameUsageID <chr>, #> #   `dcterms:references` <chr>, language <chr>, vernacularName <chr>, and #> #   abbreviated variable names ¹​acceptedNameUsageID, ²​scientificName, … filter_rank(name = \"Aves\", rank = \"class\", provider = \"col\") %>%   filter(taxonomicStatus == \"accepted\", taxonRank==\"species\") %>%    group_by(family) %>%   count(sort = TRUE) %>%    head() #> # A tibble: 6 × 2 #> # Groups:   family [6] #>   family           n #>   <chr>        <int> #> 1 Tyrannidae     401 #> 2 Thraupidae     374 #> 3 Psittacidae    370 #> 4 Trochilidae    361 #> 5 Columbidae     344 #> 6 Muscicapidae   314"},{"path":"https://docs.ropensci.org/taxadb/index.html","id":"using-the-database-connection-directly","dir":"","previous_headings":"","what":"Using the database connection directly","title":"A High-Performance Local Taxonomic Database Interface","text":"filter_* functions default return -memory data frames. filtering functions, return subset full data matches given query (names, ids, ranks, etc), returned data.frames smaller full record naming provider. Working directly SQL connection MonetDBLite database gives us access data. taxa_tbl() function provides connection: can still use familiar dplyr verbs perform common tasks. instance: species known synonyms? However, unlike filter_* functions return convenient -memory tables, still remote connection. means direct access using taxa_tbl() function (directly accessing database connection using td_connect()) low-level requires greater care. instance, just add %>% mutate(acceptedNameUsage = get_names(acceptedNameUsageID)) , get_names work remote collection. Instead, first need use collect() pull summary table memory. Users familiar remote databases dplyr find using taxa_tbl() directly convenient fast, users may find filter_* approach intuitive.","code":"taxa_tbl(\"col\") #> # Source:   table<v22.12_dwc_col> [?? x 25] #> # Database: DuckDB 0.7.0 [unknown@Linux 5.17.15-76051715-generic:R 4.2.2/:memory:] #>    taxonID   accepte…¹ scien…² taxon…³ taxon…⁴ kingdom phylum class order family #>    <chr>     <chr>     <chr>   <chr>   <chr>   <chr>   <chr>  <chr> <chr> <chr>  #>  1 COL:3L3RS COL:3L3RS Hersil… accept… species Animal… Arthr… <NA>  Aran… Hersi… #>  2 COL:6MTNS COL:6MTNS Idiotr… accept… species Animal… Arthr… Inse… Hemi… Helot… #>  3 COL:39VC7 COL:39VC7 Enitha… accept… species Animal… Arthr… Inse… Hemi… Noton… #>  4 COL:6LHWM COL:6LHWM Heleoc… accept… species Animal… Arthr… Inse… Hemi… Nauco… #>  5 COL:38PQV COL:38PQV Ectemn… accept… species Animal… Arthr… Inse… Hemi… Corix… #>  6 COL:73VN6 COL:73VN6 Neomac… accept… species Animal… Arthr… Inse… Hemi… Nauco… #>  7 COL:6MKPW COL:6MKPW Hydrot… accept… species Animal… Arthr… Inse… Hemi… Helot… #>  8 COL:5FMGW COL:5FMGW rotumai accept… subspe… <NA>    <NA>   <NA>  <NA>  <NA>   #>  9 COL:3L5C7 COL:3L5C7 Hesper… accept… species Animal… Arthr… Inse… Hemi… Corix… #> 10 COL:SVTT  COL:SVTT  Cercot… accept… species Animal… Arthr… Inse… Hemi… Nepid… #> # … with more rows, 15 more variables: genus <chr>, specificEpithet <chr>, #> #   infraspecificEpithet <chr>, cultivarEpithet <chr>, datasetID <chr>, #> #   namePublishedIn <chr>, nameAccordingTo <chr>, taxonRemarks <chr>, #> #   nomenclaturalStatus <chr>, nomenclaturalCode <chr>, #> #   parentNameUsageID <chr>, originalNameUsageID <chr>, #> #   `dcterms:references` <chr>, language <chr>, vernacularName <chr>, and #> #   abbreviated variable names ¹​acceptedNameUsageID, ²​scientificName, … taxa_tbl(\"itis\") %>%    count(acceptedNameUsageID, sort=TRUE) #> # Source:     SQL [?? x 2] #> # Database:   DuckDB 0.7.0 [unknown@Linux 5.17.15-76051715-generic:R 4.2.2/:memory:] #> # Ordered by: desc(n) #>    acceptedNameUsageID     n #>    <chr>               <dbl> #>  1 ITIS:50               462 #>  2 ITIS:983681           303 #>  3 ITIS:983691           286 #>  4 ITIS:983714           237 #>  5 ITIS:983710           231 #>  6 ITIS:798259           145 #>  7 ITIS:24921            144 #>  8 ITIS:527684           134 #>  9 ITIS:505191           126 #> 10 ITIS:504874           123 #> # … with more rows"},{"path":"https://docs.ropensci.org/taxadb/index.html","id":"learn-more","dir":"","previous_headings":"","what":"Learn more","title":"A High-Performance Local Taxonomic Database Interface","text":"See richer examples package Tutorial. Learn underlying data sources formats Data Sources Get better performance selecting alternative database backend engines. Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/clean_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean taxonomic names — clean_names","title":"Clean taxonomic names — clean_names","text":"utility sanitize taxonomic names increase probability resolving names.","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/clean_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean taxonomic names — clean_names","text":"","code":"clean_names(   names,   fix_delim = TRUE,   binomial_only = TRUE,   remove_sp = TRUE,   ascii_only = TRUE,   lowercase = TRUE,   remove_punc = FALSE )"},{"path":"https://docs.ropensci.org/taxadb/reference/clean_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean taxonomic names — clean_names","text":"names character vector taxonomic names (usually species names) fix_delim replace separators ., _, - spaces? e.g. 'Homo.sapiens' becomes 'Homo sapiens'. logical, default TRUE. binomial_only Attempt prune name binomial name, e.g. Genus species (specific epithet), e.g. Homo sapiens sapiens becomes Homo sapiens. logical, default TRUE. remove_sp drop unspecified species epithet designations? e.g. Homo sp. becomes Homo (thus matching genus level ids). logical, default TRUE. ascii_only coerce strings ascii characters? (see stringi::stri_trans_general()) lowercase names coerced lower-case provide case-insensitive matching? remove_punc replace punctuation apostrophes space, remove apostrophes","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/clean_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clean taxonomic names — clean_names","text":"Current implementation limited handling common cases. Additional extensions may added later. goal clean_names function modification rule name strings precise, atomic, toggle-able, rather relying clever opaque rules arbitrary scores. utility always used care, indiscriminate modification names may result successful inaccurate name matching. good pattern apply function subset names directly matched.","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/clean_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean taxonomic names — clean_names","text":"","code":"clean_names(c(\"Homo sapiens sapiens\", \"Homo.sapiens\", \"Homo sp.\")) #> [1] \"homo sapiens\" \"homo sapiens\" \"homo\""},{"path":"https://docs.ropensci.org/taxadb/reference/common_contains.html","id":null,"dir":"Reference","previous_headings":"","what":"common name starts with — common_contains","title":"common name starts with — common_contains","text":"common name starts ","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/common_contains.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"common name starts with — common_contains","text":"","code":"common_contains(   name,   provider = getOption(\"taxadb_default_provider\", \"itis\"),   version = latest_version(),   db = td_connect(),   ignore_case = TRUE )"},{"path":"https://docs.ropensci.org/taxadb/reference/common_contains.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"common name starts with — common_contains","text":"name vector names (scientific common, see ) matched . provider provider hierarchy returned? Default 'itis', can also configured using options(default_taxadb_provider=...\"). See [td_create] list recognized providers. version version taxadb provider database use? defaults latest.  See tl_import details. db connection taxadb database. See details. ignore_case ignore case (capitalization) matching names? Can significantly slower run.","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/common_contains.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"common name starts with — common_contains","text":"","code":"# \\donttest{   # \\dontshow{    ## All examples use a temporary directory    Sys.setenv(TAXADB_HOME=file.path(tempdir(), \"taxadb\"))    options(\"taxadb_default_provider\"=\"itis_test\")   # } common_contains(\"monkey\") #> # A tibble: 254 × 15 #>    taxonID      scientificName     taxonRank acceptedNameUsageID taxonomicStatus #>    <chr>        <chr>              <chr>     <chr>               <chr>           #>  1 ITIS:1025108 Simia lugens       species   ITIS:1025104        synonym         #>  2 ITIS:1063217 Cercopithecus pol… species   ITIS:1063216        synonym         #>  3 ITIS:572943  Aotus azarai       species   ITIS:944172         synonym         #>  4 ITIS:573056  Pygathrix brelichi species   ITIS:944260         synonym         #>  5 ITIS:944191  Oreonax flavicauda species   ITIS:572961         synonym         #>  6 ITIS:944303  Mycetes niger      species   ITIS:572939         synonym         #>  7 ITIS:944308  Cheirogaleus comm… species   ITIS:572951         synonym         #>  8 ITIS:944314  Nyctipithecus ruf… species   ITIS:572952         synonym         #>  9 ITIS:944316  Nyctipithecus spi… species   ITIS:572952         synonym         #> 10 ITIS:944322  Cebus brissonii    species   ITIS:572954         synonym         #> # ℹ 244 more rows #> # ℹ 10 more variables: update_date <lgl>, kingdom <chr>, phylum <chr>, #> #   class <chr>, order <chr>, family <chr>, genus <chr>, specificEpithet <chr>, #> #   vernacularName <chr>, infraspecificEpithet <lgl> # }"},{"path":"https://docs.ropensci.org/taxadb/reference/common_starts_with.html","id":null,"dir":"Reference","previous_headings":"","what":"common name starts with — common_starts_with","title":"common name starts with — common_starts_with","text":"common name starts ","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/common_starts_with.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"common name starts with — common_starts_with","text":"","code":"common_starts_with(   name,   provider = getOption(\"taxadb_default_provider\", \"itis\"),   version = latest_version(),   db = td_connect(),   ignore_case = TRUE )"},{"path":"https://docs.ropensci.org/taxadb/reference/common_starts_with.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"common name starts with — common_starts_with","text":"name vector names (scientific common, see ) matched . provider provider hierarchy returned? Default 'itis', can also configured using options(default_taxadb_provider=...\"). See [td_create] list recognized providers. version version taxadb provider database use? defaults latest.  See tl_import details. db connection taxadb database. See details. ignore_case ignore case (capitalization) matching names? Can significantly slower run.","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/common_starts_with.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"common name starts with — common_starts_with","text":"","code":"# \\donttest{   # \\dontshow{    ## All examples use a temporary directory    Sys.setenv(TAXADB_HOME=file.path(tempdir(), \"taxadb\"))    options(\"taxadb_default_provider\"=\"itis_test\")   # } common_starts_with(\"monkey\") #> # A tibble: 0 × 15 #> # ℹ 15 variables: taxonID <chr>, scientificName <chr>, taxonRank <chr>, #> #   acceptedNameUsageID <chr>, taxonomicStatus <chr>, update_date <lgl>, #> #   kingdom <chr>, phylum <chr>, class <chr>, order <chr>, family <chr>, #> #   genus <chr>, specificEpithet <chr>, vernacularName <chr>, #> #   infraspecificEpithet <lgl> # }"},{"path":"https://docs.ropensci.org/taxadb/reference/filter_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a data frame with column name given by by, and values given\nby the vector x, and then uses this table to do a filtering join,\njoining on the by column to return all rows matching the x values\n(scientificNames, taxonIDs, etc). — filter_by","title":"Creates a data frame with column name given by by, and values given\nby the vector x, and then uses this table to do a filtering join,\njoining on the by column to return all rows matching the x values\n(scientificNames, taxonIDs, etc). — filter_by","text":"Creates data frame column name given , values given vector x, uses table filtering join, joining column return rows matching x values (scientificNames, taxonIDs, etc).","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/filter_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a data frame with column name given by by, and values given\nby the vector x, and then uses this table to do a filtering join,\njoining on the by column to return all rows matching the x values\n(scientificNames, taxonIDs, etc). — filter_by","text":"","code":"filter_by(   x,   by,   provider = getOption(\"taxadb_default_provider\", \"itis\"),   schema = c(\"dwc\", \"common\"),   version = latest_version(),   collect = TRUE,   db = td_connect(),   ignore_case = FALSE )"},{"path":"https://docs.ropensci.org/taxadb/reference/filter_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a data frame with column name given by by, and values given\nby the vector x, and then uses this table to do a filtering join,\njoining on the by column to return all rows matching the x values\n(scientificNames, taxonIDs, etc). — filter_by","text":"x vector values filter column name taxa_tbl (following Darwin Core Schema terms). filtering join executed column joining variable. provider provider hierarchy returned? Default 'itis', can also configured using options(default_taxadb_provider=...\"). See [td_create] list recognized providers. schema One \"dwc\" (Darwin Core data) \"common\" (Common names table.) version version taxadb provider database use? defaults latest.  See tl_import details. collect logical, default TRUE. return -memory data.frame (default, usually convenient), reference lazy-eval table disk (useful large tables may first perform subsequent filtering operations.) db connection taxadb database. See details. ignore_case ignore case (capitalization) matching names? Can significantly slower run.","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/filter_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a data frame with column name given by by, and values given\nby the vector x, and then uses this table to do a filtering join,\njoining on the by column to return all rows matching the x values\n(scientificNames, taxonIDs, etc). — filter_by","text":"data.frame Darwin Core tabular format containing matching taxonomic entities.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/taxadb/reference/filter_by.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a data frame with column name given by by, and values given\nby the vector x, and then uses this table to do a filtering join,\njoining on the by column to return all rows matching the x values\n(scientificNames, taxonIDs, etc). — filter_by","text":"","code":"# \\donttest{   # \\dontshow{    ## All examples use a temporary directory    Sys.setenv(TAXADB_HOME=file.path(tempdir(), \"taxadb\"))    options(\"taxadb_default_provider\"=\"itis_test\")   # }  sp <- c(\"Trochalopteron henrici gucenense\",         \"Trochalopteron elliotii\") filter_by(sp, \"scientificName\") #> # A tibble: 0 × 15 #> # ℹ 15 variables: taxonID <chr>, scientificName <chr>, taxonRank <chr>, #> #   acceptedNameUsageID <chr>, taxonomicStatus <chr>, update_date <lgl>, #> #   kingdom <chr>, phylum <chr>, class <chr>, order <chr>, family <chr>, #> #   genus <chr>, specificEpithet <chr>, vernacularName <chr>, #> #   infraspecificEpithet <lgl>  filter_by(c(\"ITIS:1077358\", \"ITIS:175089\"), \"taxonID\") #> # A tibble: 0 × 15 #> # ℹ 15 variables: taxonID <chr>, scientificName <chr>, taxonRank <chr>, #> #   acceptedNameUsageID <chr>, taxonomicStatus <chr>, update_date <lgl>, #> #   kingdom <chr>, phylum <chr>, class <chr>, order <chr>, family <chr>, #> #   genus <chr>, specificEpithet <chr>, vernacularName <chr>, #> #   infraspecificEpithet <lgl>  filter_by(\"Aves\", \"class\") #> # A tibble: 0 × 15 #> # ℹ 15 variables: taxonID <chr>, scientificName <chr>, taxonRank <chr>, #> #   acceptedNameUsageID <chr>, taxonomicStatus <chr>, update_date <lgl>, #> #   kingdom <chr>, phylum <chr>, class <chr>, order <chr>, family <chr>, #> #   genus <chr>, specificEpithet <chr>, vernacularName <chr>, #> #   infraspecificEpithet <lgl>  # }"},{"path":"https://docs.ropensci.org/taxadb/reference/filter_common.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up taxonomic information by common name — filter_common","title":"Look up taxonomic information by common name — filter_common","text":"Look taxonomic information common name","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/filter_common.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up taxonomic information by common name — filter_common","text":"","code":"filter_common(   name,   provider = getOption(\"taxadb_default_provider\", \"itis\"),   version = latest_version(),   collect = TRUE,   ignore_case = TRUE,   db = td_connect() )"},{"path":"https://docs.ropensci.org/taxadb/reference/filter_common.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up taxonomic information by common name — filter_common","text":"name character vector common (vernacular English) names, e.g. \"Humans\" provider provider hierarchy returned? Default 'itis', can also configured using options(default_taxadb_provider=...\"). See [td_create] list recognized providers. version version taxadb provider database use? defaults latest.  See tl_import details. collect logical, default TRUE. return -memory data.frame (default, usually convenient), reference lazy-eval table disk (useful large tables may first perform subsequent filtering operations.) ignore_case ignore case (capitalization) matching names? Can significantly slower run. db connection taxadb database. See details.","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/filter_common.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up taxonomic information by common name — filter_common","text":"data.frame Darwin Core tabular format containing matching taxonomic entities.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/taxadb/reference/filter_common.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Look up taxonomic information by common name — filter_common","text":"","code":"# \\donttest{   # \\dontshow{    ## All examples use a temporary directory    options(\"taxadb_default_provider\"=\"itis_test\")    Sys.setenv(TAXADB_HOME=file.path(tempdir(), \"taxadb\"))   # }  filter_common(\"Pied Tamarin\") #> # A tibble: 2 × 16 #>   vernacularName language update_date acceptedNameUsageID taxonID scientificName #>   <chr>          <chr>    <date>      <chr>               <chr>   <chr>          #> 1 Pied Tamarin   English  2014-06-26  ITIS:572923         ITIS:1… Midas bicolor  #> 2 Pied Tamarin   English  2014-06-26  ITIS:572923         ITIS:5… Saguinus bico… #> # ℹ 10 more variables: taxonRank <chr>, taxonomicStatus <chr>, kingdom <chr>, #> #   phylum <chr>, class <chr>, order <chr>, family <chr>, genus <chr>, #> #   specificEpithet <chr>, infraspecificEpithet <lgl>  # }    # \\dontshow{    ## All examples use a temporary directory    Sys.unsetenv(\"TAXADB_HOME\")    options(\"taxadb_default_provider\" = NULL)   # }"},{"path":"https://docs.ropensci.org/taxadb/reference/filter_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a taxonomic table matching the requested ids — filter_id","title":"Return a taxonomic table matching the requested ids — filter_id","text":"Return taxonomic table matching requested ids","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/filter_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a taxonomic table matching the requested ids — filter_id","text":"","code":"filter_id(   id,   provider = getOption(\"taxadb_default_provider\", \"itis\"),   type = c(\"taxonID\", \"acceptedNameUsageID\"),   version = latest_version(),   collect = TRUE,   db = td_connect() )"},{"path":"https://docs.ropensci.org/taxadb/reference/filter_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a taxonomic table matching the requested ids — filter_id","text":"id taxonomic id, prefix format provider provider hierarchy returned? Default 'itis', can also configured using options(default_taxadb_provider=...\"). See [td_create] list recognized providers. type id type.  Can taxonID acceptedNameUsageID, see details. version version taxadb provider database use? defaults latest.  See tl_import details. collect logical, default TRUE. return -memory data.frame (default, usually convenient), reference lazy-eval table disk (useful large tables may first perform subsequent filtering operations.) db connection taxadb database. See details.","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/filter_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a taxonomic table matching the requested ids — filter_id","text":"data.frame id name matching species","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/filter_id.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return a taxonomic table matching the requested ids — filter_id","text":"Use type=\"acceptedNameUsageID\" return rows ID accepted ID, including synonyms accepted names (since synonyms name share acceptedNameUsageID.) Use taxonID (default) return rows Scientific name corresponds taxonID. providers (e.g. ITIS) assign taxonIDs synonyms, others assign IDs accepted names.  latter case, means requesting taxonID match accepted names, requesting matches acceptedNameUsageID also return known synonyms. See examples.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/taxadb/reference/filter_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return a taxonomic table matching the requested ids — filter_id","text":"","code":"# \\donttest{   # \\dontshow{    ## All examples use a temporary directory    Sys.setenv(TAXADB_HOME=file.path(tempdir(), \"taxadb\"))    options(\"taxadb_default_provider\"=\"itis_test\")   # }  filter_id(c(\"ITIS:1077358\", \"ITIS:175089\")) #> # A tibble: 0 × 15 #> # ℹ 15 variables: taxonID <chr>, scientificName <chr>, taxonRank <chr>, #> #   acceptedNameUsageID <chr>, taxonomicStatus <chr>, update_date <lgl>, #> #   kingdom <chr>, phylum <chr>, class <chr>, order <chr>, family <chr>, #> #   genus <chr>, specificEpithet <chr>, vernacularName <chr>, #> #   infraspecificEpithet <lgl> filter_id(\"ITIS:1077358\", type=\"acceptedNameUsageID\") #> # A tibble: 0 × 15 #> # ℹ 15 variables: taxonID <chr>, scientificName <chr>, taxonRank <chr>, #> #   acceptedNameUsageID <chr>, taxonomicStatus <chr>, update_date <lgl>, #> #   kingdom <chr>, phylum <chr>, class <chr>, order <chr>, family <chr>, #> #   genus <chr>, specificEpithet <chr>, vernacularName <chr>, #> #   infraspecificEpithet <lgl>  # }"},{"path":"https://docs.ropensci.org/taxadb/reference/filter_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up taxonomic information by scientific name — filter_name","title":"Look up taxonomic information by scientific name — filter_name","text":"Look taxonomic information scientific name","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/filter_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up taxonomic information by scientific name — filter_name","text":"","code":"filter_name(   name,   provider = getOption(\"taxadb_default_provider\", \"itis\"),   version = latest_version(),   collect = TRUE,   ignore_case = FALSE,   db = td_connect() )"},{"path":"https://docs.ropensci.org/taxadb/reference/filter_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up taxonomic information by scientific name — filter_name","text":"name character vector scientific names, e.g. \"Homo sapiens\" provider provider hierarchy returned? Default 'itis', can also configured using options(default_taxadb_provider=...\"). See [td_create] list recognized providers. version version taxadb provider database use? defaults latest.  See tl_import details. collect logical, default TRUE. return -memory data.frame (default, usually convenient), reference lazy-eval table disk (useful large tables may first perform subsequent filtering operations.) ignore_case ignore case (capitalization) matching names? Can significantly slower run. db connection taxadb database. See details.","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/filter_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up taxonomic information by scientific name — filter_name","text":"data.frame Darwin Core tabular format containing matching taxonomic entities.","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/filter_name.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Look up taxonomic information by scientific name — filter_name","text":"authorities can match species level higher-level (lower, e.g. subspecies variety) taxonomic names. rank level indicated taxonRank column. authorities include known synonyms accepted names scientificName column, (status indicated taxonomicStatus). convenient, users typically know names synonyms accepted names, want get match accepted name accepted ID either case.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/taxadb/reference/filter_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Look up taxonomic information by scientific name — filter_name","text":"","code":"# \\donttest{   # \\dontshow{    ## All examples use a temporary directory    Sys.setenv(TAXADB_HOME=file.path(tempdir(), \"taxadb\"))    options(\"taxadb_default_provider\"=\"itis_test\")   # }  sp <- c(\"Trochalopteron henrici gucenense\",         \"Trochalopteron elliotii\") filter_name(sp) #> # A tibble: 0 × 15 #> # ℹ 15 variables: taxonID <chr>, scientificName <chr>, taxonRank <chr>, #> #   acceptedNameUsageID <chr>, taxonomicStatus <chr>, update_date <lgl>, #> #   kingdom <chr>, phylum <chr>, class <chr>, order <chr>, family <chr>, #> #   genus <chr>, specificEpithet <chr>, vernacularName <chr>, #> #   infraspecificEpithet <lgl>  # }"},{"path":"https://docs.ropensci.org/taxadb/reference/filter_rank.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all members (descendants) of a given rank level — filter_rank","title":"Get all members (descendants) of a given rank level — filter_rank","text":"Get members (descendants) given rank level","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/filter_rank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all members (descendants) of a given rank level — filter_rank","text":"","code":"filter_rank(   name,   rank,   provider = getOption(\"taxadb_default_provider\", \"itis\"),   version = latest_version(),   collect = TRUE,   ignore_case = TRUE,   db = td_connect() )"},{"path":"https://docs.ropensci.org/taxadb/reference/filter_rank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all members (descendants) of a given rank level — filter_rank","text":"name taxonomic scientific name (e.g. \"Aves\") rank taxonomic rank name. (e.g. \"class\") provider provider hierarchy returned? Default 'itis', can also configured using options(default_taxadb_provider=...\"). See [td_create] list recognized providers. version version taxadb provider database use? defaults latest.  See tl_import details. collect logical, default TRUE. return -memory data.frame (default, usually convenient), reference lazy-eval table disk (useful large tables may first perform subsequent filtering operations.) ignore_case ignore case (capitalization) matching names? Can significantly slower run. db connection taxadb database. See details.","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/filter_rank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all members (descendants) of a given rank level — filter_rank","text":"data.frame Darwin Core tabular format containing matching taxonomic entities.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/taxadb/reference/filter_rank.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all members (descendants) of a given rank level — filter_rank","text":"","code":"# \\donttest{   # \\dontshow{    ## All examples use a temporary directory    Sys.setenv(TAXADB_HOME=file.path(tempdir(), \"taxadb\"))    options(\"taxadb_default_provider\"=\"itis_test\")   # }  filter_rank(\"Aves\", \"class\") #> # A tibble: 0 × 15 #> # ℹ 15 variables: taxonID <chr>, scientificName <chr>, taxonRank <chr>, #> #   acceptedNameUsageID <chr>, taxonomicStatus <chr>, update_date <lgl>, #> #   kingdom <chr>, phylum <chr>, class <chr>, order <chr>, family <chr>, #> #   genus <chr>, specificEpithet <chr>, vernacularName <chr>, #> #   infraspecificEpithet <lgl>  # }"},{"path":"https://docs.ropensci.org/taxadb/reference/fuzzy_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Match names that start or contain a specified text string — fuzzy_filter","title":"Match names that start or contain a specified text string — fuzzy_filter","text":"Match names start contain specified text string","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/fuzzy_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match names that start or contain a specified text string — fuzzy_filter","text":"","code":"fuzzy_filter(   name,   by = c(\"scientificName\", \"vernacularName\"),   provider = getOption(\"taxadb_default_provider\", \"itis\"),   match = c(\"contains\", \"starts_with\"),   version = latest_version(),   db = td_connect(),   ignore_case = TRUE,   collect = TRUE )"},{"path":"https://docs.ropensci.org/taxadb/reference/fuzzy_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match names that start or contain a specified text string — fuzzy_filter","text":"name vector names (scientific common, see ) matched . column name taxa_tbl (following Darwin Core Schema terms). filtering join executed column joining variable. provider provider hierarchy returned? Default 'itis', can also configured using options(default_taxadb_provider=...\"). See [td_create] list recognized providers. match match names starting term containing term anywhere name? version version taxadb provider database use? defaults latest.  See tl_import details. db connection taxadb database. See details. ignore_case ignore case (capitalization) matching names? Can significantly slower run. collect logical, default TRUE. return -memory data.frame (default, usually convenient), reference lazy-eval table disk (useful large tables may first perform subsequent filtering operations.)","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/fuzzy_filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Match names that start or contain a specified text string — fuzzy_filter","text":"Note fuzzy filter fast single small number names, slower given large vector names match, unlike filter_ commands, fuzzy matching requires separate SQL calls name. fuzzy matches confirmed manually event, e.g. every common name containing \"monkey\" belongs primate species. method utilizes database operation %like% filter tables without loading memory.  Note support use regular expressions time.","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/fuzzy_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match names that start or contain a specified text string — fuzzy_filter","text":"","code":"# \\donttest{   # \\dontshow{    ## All examples use a temporary directory    Sys.setenv(TAXADB_HOME=file.path(tempdir(), \"taxadb\"))    options(\"taxadb_default_provider\"=\"itis_test\")   # }  ## match any common name containing: name <- c(\"woodpecker\", \"monkey\") fuzzy_filter(name, \"vernacularName\") #> # A tibble: 254 × 15 #>    taxonID      scientificName     taxonRank acceptedNameUsageID taxonomicStatus #>    <chr>        <chr>              <chr>     <chr>               <chr>           #>  1 ITIS:1025108 Simia lugens       species   ITIS:1025104        synonym         #>  2 ITIS:1063217 Cercopithecus pol… species   ITIS:1063216        synonym         #>  3 ITIS:572943  Aotus azarai       species   ITIS:944172         synonym         #>  4 ITIS:573056  Pygathrix brelichi species   ITIS:944260         synonym         #>  5 ITIS:944191  Oreonax flavicauda species   ITIS:572961         synonym         #>  6 ITIS:944303  Mycetes niger      species   ITIS:572939         synonym         #>  7 ITIS:944308  Cheirogaleus comm… species   ITIS:572951         synonym         #>  8 ITIS:944314  Nyctipithecus ruf… species   ITIS:572952         synonym         #>  9 ITIS:944316  Nyctipithecus spi… species   ITIS:572952         synonym         #> 10 ITIS:944322  Cebus brissonii    species   ITIS:572954         synonym         #> # ℹ 244 more rows #> # ℹ 10 more variables: update_date <lgl>, kingdom <chr>, phylum <chr>, #> #   class <chr>, order <chr>, family <chr>, genus <chr>, specificEpithet <chr>, #> #   vernacularName <chr>, infraspecificEpithet <lgl>  ## match scientific name fuzzy_filter(\"Chera\", \"scientificName\",              match = \"starts_with\") #> # A tibble: 6 × 15 #>   taxonID      scientificName      taxonRank acceptedNameUsageID taxonomicStatus #>   <chr>        <chr>               <chr>     <chr>               <chr>           #> 1 ITIS:1025105 Cheracebus medemi   species   ITIS:1025105        accepted        #> 2 ITIS:1025107 Cheracebus lucifer  species   ITIS:1025107        accepted        #> 3 ITIS:1025110 Cheracebus purinus  species   ITIS:1025110        accepted        #> 4 ITIS:1025104 Cheracebus lugens   species   ITIS:1025104        accepted        #> 5 ITIS:1025106 Cheracebus torquat… species   ITIS:1025106        accepted        #> 6 ITIS:1025111 Cheracebus regulus  species   ITIS:1025111        accepted        #> # ℹ 10 more variables: update_date <lgl>, kingdom <chr>, phylum <chr>, #> #   class <chr>, order <chr>, family <chr>, genus <chr>, specificEpithet <chr>, #> #   vernacularName <chr>, infraspecificEpithet <lgl> # }"},{"path":"https://docs.ropensci.org/taxadb/reference/get_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"get_ids — get_ids","title":"get_ids — get_ids","text":"drop-replacement [taxize::get_ids()]","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/get_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_ids — get_ids","text":"","code":"get_ids(   names,   provider = getOption(\"taxadb_default_provider\", \"itis\"),   format = c(\"prefix\", \"bare\", \"uri\"),   version = latest_version(),   taxadb_db = td_connect(),   ignore_case = FALSE,   warn = TRUE,   db = NULL,   ... )"},{"path":"https://docs.ropensci.org/taxadb/reference/get_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_ids — get_ids","text":"names list scientific names (may include higher-order ranks authorities). provider abbreviation code provider.  See details. format Format returned identifier, one prefix (e.g. NCBI:9606, default), bare (e.g. 9606, used taxize::get_ids()), uri (e.g. http://ncbi.nlm.nih.gov/taxonomy/9606). version version taxadb provider database use? defaults latest.  see [avialable_releases()] details. taxadb_db Connection [td_connect()]. ignore_case ignore case (capitalization) matching names? default TRUE. warn display warnings NAs resulting multiply-resolved matches? (Unlike unmatched names, NAs can usually resolved manually via filter_id()) db previous name provider argument, now deprecated ... additional arguments (currently ignored)","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/get_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_ids — get_ids","text":"vector IDs, length input names unmatched names multiply-matched names return NAs. resolve multi-matched names, use [filter_name()] instead return table separate row separate match input name.","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/get_ids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_ids — get_ids","text":"Note taxize authorities: nbn, tropicos, eol, recognized taxadb throw error . Meanwhile, taxadb recognizes several authorities known [taxize::get_ids()]. include itis, ncbi, col, gbif. Like taxadb functions, function run fastest local copy provider installed advance using [td_create()].","code":""},{"path":[]},{"path":"https://docs.ropensci.org/taxadb/reference/get_ids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_ids — get_ids","text":"","code":"# \\donttest{    # \\dontshow{    ## All examples use a temporary directory    options(\"taxadb_default_provider\"=\"itis_test\")    Sys.setenv(TAXADB_HOME=file.path(tempdir(), \"taxadb\"))   # }  get_ids(\"Midas bicolor\") #> Joining with `by = join_by(scientificName)` #> [1] \"ITIS:572923\" get_ids(c(\"Midas bicolor\", \"Homo sapiens\"), format = \"prefix\") #> Joining with `by = join_by(scientificName)` #> [1] \"ITIS:572923\" \"ITIS:180092\" get_ids(\"Midas bicolor\", format = \"uri\") #> Joining with `by = join_by(scientificName)` #> [1] \"http://www.itis.gov/servlet/SingleRpt/SingleRpt?search_topic=TSN&search_value=572923\"  # }    # \\dontshow{    Sys.unsetenv(\"TAXADB_HOME\")   # }"},{"path":"https://docs.ropensci.org/taxadb/reference/get_names.html","id":null,"dir":"Reference","previous_headings":"","what":"get_names — get_names","title":"get_names — get_names","text":"Translate identifiers scientific names","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/get_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_names — get_names","text":"","code":"get_names(   id,   provider = getOption(\"taxadb_default_provider\", \"itis\"),   version = latest_version(),   format = c(\"guess\", \"prefix\", \"bare\", \"uri\"),   taxadb_db = td_connect(),   db = NULL )"},{"path":"https://docs.ropensci.org/taxadb/reference/get_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_names — get_names","text":"id list taxonomic identifiers. provider abbreviation code provider.  See details. version version taxadb provider database use? defaults latest.  see [avialable_releases()] details. format Format returned identifier, one prefix (e.g. NCBI:9606, default), bare (e.g. 9606, used taxize::get_ids()), uri (e.g. http://ncbi.nlm.nih.gov/taxonomy/9606). taxadb_db Connection [td_connect()]. db previous name provider argument, now deprecated","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/get_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_names — get_names","text":"vector names, length input ids. unmatched IDs return NAs.","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/get_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_names — get_names","text":"Like taxadb functions, function run fastest local copy provider installed advance using [td_create()].","code":""},{"path":[]},{"path":"https://docs.ropensci.org/taxadb/reference/get_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_names — get_names","text":"","code":"# \\donttest{  # \\dontshow{    ## All examples use a temporary directory    Sys.setenv(TAXADB_HOME = file.path(tempdir(), \"taxadb\"))    options(\"taxadb_default_provider\"=\"itis_test\")   # }  get_names(c(\"ITIS:1025094\", \"ITIS:1025103\"), format = \"prefix\") #> [1] \"Leontopithecus fuscus\" \"Midas bicolor\"          # }"},{"path":"https://docs.ropensci.org/taxadb/reference/name_contains.html","id":null,"dir":"Reference","previous_headings":"","what":"return all taxa in which scientific name contains the text provided — name_contains","title":"return all taxa in which scientific name contains the text provided — name_contains","text":"return taxa scientific name contains text provided","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/name_contains.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"return all taxa in which scientific name contains the text provided — name_contains","text":"","code":"name_contains(   name,   provider = getOption(\"taxadb_default_provider\", \"itis\"),   version = latest_version(),   db = td_connect(),   ignore_case = TRUE )"},{"path":"https://docs.ropensci.org/taxadb/reference/name_contains.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"return all taxa in which scientific name contains the text provided — name_contains","text":"name vector names (scientific common, see ) matched . provider provider hierarchy returned? Default 'itis', can also configured using options(default_taxadb_provider=...\"). See [td_create] list recognized providers. version version taxadb provider database use? defaults latest.  See tl_import details. db connection taxadb database. See details. ignore_case ignore case (capitalization) matching names? Can significantly slower run.","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/name_contains.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"return all taxa in which scientific name contains the text provided — name_contains","text":"","code":"# \\donttest{   # \\dontshow{    ## All examples use a temporary directory    Sys.setenv(TAXADB_HOME=file.path(tempdir(), \"taxadb\"))    options(\"taxadb_default_provider\"=\"itis_test\")   # } name_contains(\"Chera\") #> # A tibble: 6 × 15 #>   taxonID      scientificName      taxonRank acceptedNameUsageID taxonomicStatus #>   <chr>        <chr>               <chr>     <chr>               <chr>           #> 1 ITIS:1025110 Cheracebus purinus  species   ITIS:1025110        accepted        #> 2 ITIS:1025105 Cheracebus medemi   species   ITIS:1025105        accepted        #> 3 ITIS:1025107 Cheracebus lucifer  species   ITIS:1025107        accepted        #> 4 ITIS:1025104 Cheracebus lugens   species   ITIS:1025104        accepted        #> 5 ITIS:1025106 Cheracebus torquat… species   ITIS:1025106        accepted        #> 6 ITIS:1025111 Cheracebus regulus  species   ITIS:1025111        accepted        #> # ℹ 10 more variables: update_date <lgl>, kingdom <chr>, phylum <chr>, #> #   class <chr>, order <chr>, family <chr>, genus <chr>, specificEpithet <chr>, #> #   vernacularName <chr>, infraspecificEpithet <lgl> # }"},{"path":"https://docs.ropensci.org/taxadb/reference/name_starts_with.html","id":null,"dir":"Reference","previous_headings":"","what":"scientific name starts with — name_starts_with","title":"scientific name starts with — name_starts_with","text":"scientific name starts ","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/name_starts_with.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"scientific name starts with — name_starts_with","text":"","code":"name_starts_with(   name,   provider = getOption(\"taxadb_default_provider\", \"itis\"),   version = latest_version(),   db = td_connect(),   ignore_case = TRUE )"},{"path":"https://docs.ropensci.org/taxadb/reference/name_starts_with.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"scientific name starts with — name_starts_with","text":"name vector names (scientific common, see ) matched . provider provider hierarchy returned? Default 'itis', can also configured using options(default_taxadb_provider=...\"). See [td_create] list recognized providers. version version taxadb provider database use? defaults latest.  See tl_import details. db connection taxadb database. See details. ignore_case ignore case (capitalization) matching names? Can significantly slower run.","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/name_starts_with.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"scientific name starts with — name_starts_with","text":"","code":"# \\donttest{   # \\dontshow{    ## All examples use a temporary directory    Sys.setenv(TAXADB_HOME=file.path(tempdir(), \"taxadb\"))    options(\"taxadb_default_provider\"=\"itis_test\")   # } name_starts_with(\"Chera\") #> # A tibble: 6 × 15 #>   taxonID      scientificName      taxonRank acceptedNameUsageID taxonomicStatus #>   <chr>        <chr>               <chr>     <chr>               <chr>           #> 1 ITIS:1025110 Cheracebus purinus  species   ITIS:1025110        accepted        #> 2 ITIS:1025105 Cheracebus medemi   species   ITIS:1025105        accepted        #> 3 ITIS:1025107 Cheracebus lucifer  species   ITIS:1025107        accepted        #> 4 ITIS:1025104 Cheracebus lugens   species   ITIS:1025104        accepted        #> 5 ITIS:1025106 Cheracebus torquat… species   ITIS:1025106        accepted        #> 6 ITIS:1025111 Cheracebus regulus  species   ITIS:1025111        accepted        #> # ℹ 10 more variables: update_date <lgl>, kingdom <chr>, phylum <chr>, #> #   class <chr>, order <chr>, family <chr>, genus <chr>, specificEpithet <chr>, #> #   vernacularName <chr>, infraspecificEpithet <lgl> # }"},{"path":"https://docs.ropensci.org/taxadb/reference/taxa_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a reference to a given table in the taxadb database — taxa_tbl","title":"Return a reference to a given table in the taxadb database — taxa_tbl","text":"Return reference given table taxadb database","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/taxa_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a reference to a given table in the taxadb database — taxa_tbl","text":"","code":"taxa_tbl(   provider = getOption(\"taxadb_default_provider\", \"itis\"),   schema = c(\"dwc\", \"common\"),   version = latest_version(),   db = td_connect() )"},{"path":"https://docs.ropensci.org/taxadb/reference/taxa_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a reference to a given table in the taxadb database — taxa_tbl","text":"provider provider hierarchy returned? Default 'itis', can also configured using options(default_taxadb_provider=...\"). See [td_create] list recognized providers. schema One \"dwc\" (Darwin Core data) \"common\" (Common names table.) version version taxadb provider database use? defaults latest.  See tl_import details. db connection taxadb database. See details.","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/taxa_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return a reference to a given table in the taxadb database — taxa_tbl","text":"","code":"# \\donttest{   # \\dontshow{    ## All examples use a temporary directory    Sys.setenv(TAXADB_HOME=file.path(tempdir(), \"taxadb\"))    options(\"taxadb_default_provider\"=\"itis_test\")   # }    ## default schema is the dwc table   taxa_tbl() #> # Source:   table<v22.12_dwc_itis_test> [?? x 15] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.5.0-1015-azure:R 4.3.2/:memory:] #>    taxonID      scientificName     taxonRank acceptedNameUsageID taxonomicStatus #>    <chr>        <chr>              <chr>     <chr>               <chr>           #>  1 ITIS:1025094 Leontopithecus fu… species   ITIS:1025093        synonym         #>  2 ITIS:1025099 Midas tripartitus  species   ITIS:1025098        synonym         #>  3 ITIS:1025101 Hapale nigrifrons  species   ITIS:1025100        synonym         #>  4 ITIS:1025103 Midas bicolor      species   ITIS:572923         synonym         #>  5 ITIS:1025108 Simia lugens       species   ITIS:1025104        synonym         #>  6 ITIS:1025109 Callitrix torquat… species   ITIS:1025106        synonym         #>  7 ITIS:1025118 Callithrix donaco… species   ITIS:1025112        synonym         #>  8 ITIS:1025123 Callithrix cinera… species   ITIS:1025122        synonym         #>  9 ITIS:1025135 Plecturocebus dub… species   ITIS:1025134        synonym         #> 10 ITIS:1025136 Callithrix caliga… species   ITIS:1025134        synonym         #> # ℹ more rows #> # ℹ 10 more variables: update_date <lgl>, kingdom <chr>, phylum <chr>, #> #   class <chr>, order <chr>, family <chr>, genus <chr>, specificEpithet <chr>, #> #   vernacularName <chr>, infraspecificEpithet <lgl>    ## common names table   taxa_tbl(schema = \"common\") #> # Source:   table<v22.12_common_itis_test> [?? x 16] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.5.0-1015-azure:R 4.3.2/:memory:] #>    vernacularName language update_date acceptedNameUsageID taxonID     #>    <chr>          <chr>    <date>      <chr>               <chr>       #>  1 man            English  2002-07-30  ITIS:180092         ITIS:944513 #>  2 man            English  2002-07-30  ITIS:180092         ITIS:944514 #>  3 man            English  2002-07-30  ITIS:180092         ITIS:944515 #>  4 man            English  2002-07-30  ITIS:180092         ITIS:944516 #>  5 man            English  2002-07-30  ITIS:180092         ITIS:944517 #>  6 man            English  2002-07-30  ITIS:180092         ITIS:944518 #>  7 man            English  2002-07-30  ITIS:180092         ITIS:944519 #>  8 man            English  2002-07-30  ITIS:180092         ITIS:944520 #>  9 man            English  2002-07-30  ITIS:180092         ITIS:944521 #> 10 man            English  2002-07-30  ITIS:180092         ITIS:944522 #> # ℹ more rows #> # ℹ 11 more variables: scientificName <chr>, taxonRank <chr>, #> #   taxonomicStatus <chr>, kingdom <chr>, phylum <chr>, class <chr>, #> #   order <chr>, family <chr>, genus <chr>, specificEpithet <chr>, #> #   infraspecificEpithet <lgl>    # }"},{"path":"https://docs.ropensci.org/taxadb/reference/taxadb_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Show the taxadb directory — taxadb_dir","title":"Show the taxadb directory — taxadb_dir","text":"Show taxadb directory","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/taxadb_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show the taxadb directory — taxadb_dir","text":"","code":"taxadb_dir()"},{"path":"https://docs.ropensci.org/taxadb/reference/taxadb_dir.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show the taxadb directory — taxadb_dir","text":"NOTE: upgrading duckdb, user may need delete existing databases created previous version. efficient way unlink(taxadb::taxadb_dir(), TRUE).","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/taxadb_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show the taxadb directory — taxadb_dir","text":"","code":"## show the directory taxadb_dir() #> [1] \"/tmp/Rtmp0ctuHj/taxadb\" ## Purge the local db unlink(taxadb::taxadb_dir(), TRUE)"},{"path":"https://docs.ropensci.org/taxadb/reference/td_connect.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to the taxadb database — td_connect","title":"Connect to the taxadb database — td_connect","text":"Connect taxadb database","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/td_connect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to the taxadb database — td_connect","text":"","code":"td_connect(dbdir = NULL, driver = NULL, read_only = NULL)"},{"path":"https://docs.ropensci.org/taxadb/reference/td_connect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to the taxadb database — td_connect","text":"dbdir Path database. longer needed driver deprecated, ignored.  driver always duckdb. read_only deprecated, driver always read-.","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/td_connect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to the taxadb database — td_connect","text":"Returns DBI connection default duckdb database","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/td_connect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to the taxadb database — td_connect","text":"function provides default database connection taxadb. Note can use taxadb DBI-compatible database connection  passing connection object directly taxadb functions using db argument. td_connect() exists provide reasonable automatic defaults based available system. performance reasons, function also cache restore existing database connection, making repeated calls td_connect() much faster failsafe repeated calls DBI::dbConnect","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/td_connect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to the taxadb database — td_connect","text":"","code":"# \\donttest{ ## OPTIONAL: you can first set an alternative home location, ## such as a temporary directory: Sys.setenv(TAXADB_HOME=file.path(tempdir(), \"taxadb\"))  ## Connect to the database: db <- td_connect()  # }"},{"path":"https://docs.ropensci.org/taxadb/reference/td_create.html","id":null,"dir":"Reference","previous_headings":"","what":"create a local taxonomic database — td_create","title":"create a local taxonomic database — td_create","text":"create local taxonomic database","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/td_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create a local taxonomic database — td_create","text":"","code":"td_create(   provider = getOption(\"taxadb_default_provider\", \"itis\"),   schema = c(\"dwc\", \"common\"),   version = latest_version(),   overwrite = NULL,   lines = NULL,   dbdir = NULL,   db = td_connect() )"},{"path":"https://docs.ropensci.org/taxadb/reference/td_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create a local taxonomic database — td_create","text":"provider list (character vector) provider(s) included database. default, install itis.  See details list recognized provider. available provider automatically. schema One \"dwc\" (Darwin Core data) \"common\" (Common names table.) version version taxadb provider database use? defaults latest.  See tl_import details. overwrite overwrite existing tables? Default TRUE. Change \"ask\" interactive interface, TRUE force overwrite (.e. updating local database upon new release.) lines number lines can safely read memory . Leave default increase faster importing plenty spare RAM. dbdir location computer database installed. Defaults user data directory given [tools::R_user_dir()]. db connection database.  default, taxadb set fast database connection.","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/td_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create a local taxonomic database — td_create","text":"path database installed (invisibly)","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/td_create.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"create a local taxonomic database — td_create","text":"Authorities currently recognized taxadb : itis: Integrated Taxonomic Information System, https://www.itis.gov ncbi:  National Center Biotechnology Information, https://www.ncbi.nlm.nih.gov/taxonomy col: Catalogue Life, http://www.catalogueoflife.org/ gbif: Global Biodiversity Information Facility, https://www.gbif.org/ ott: OpenTree Taxonomy: https://github.com/OpenTreeOfLife/reference-taxonomy iucn: IUCN Red List, https://iucnredlist.org itis_test: small subset ITIS, cached locally package testing purposes ","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/td_create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create a local taxonomic database — td_create","text":"","code":"# \\donttest{   # \\dontshow{    ## All examples use a temporary directory    Sys.setenv(TAXADB_HOME=file.path(tempdir(), \"taxadb\"))    options(\"taxadb_default_provider\"=\"itis_test\")    # }   ## Install the ITIS database   td_create()    ## force re-install:   td_create( overwrite = TRUE) #> Warning: deprecated arguments will be removed  from future releases, see function docs  # }"},{"path":"https://docs.ropensci.org/taxadb/reference/td_disconnect.html","id":null,"dir":"Reference","previous_headings":"","what":"Disconnect from the taxadb database. — td_disconnect","title":"Disconnect from the taxadb database. — td_disconnect","text":"Disconnect taxadb database.","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/td_disconnect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disconnect from the taxadb database. — td_disconnect","text":"","code":"td_disconnect(db = td_connect())"},{"path":"https://docs.ropensci.org/taxadb/reference/td_disconnect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Disconnect from the taxadb database. — td_disconnect","text":"db database connection","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/td_disconnect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Disconnect from the taxadb database. — td_disconnect","text":"function manually closes connection taxadb database.","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/td_disconnect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Disconnect from the taxadb database. — td_disconnect","text":"","code":"# \\donttest{  ## Disconnect from the database: td_disconnect()  # }"},{"path":"https://docs.ropensci.org/taxadb/reference/tl_import.html","id":null,"dir":"Reference","previous_headings":"","what":"Import taxonomic database tables — tl_import","title":"Import taxonomic database tables — tl_import","text":"Downloads requested taxonomic data tables return local path data tsv.gz format.  Downloads cached identified content hash tl_import attempt download file multiple times.","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/tl_import.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import taxonomic database tables — tl_import","text":"","code":"tl_import(   provider = getOption(\"tl_default_provider\", \"itis\"),   schema = c(\"dwc\", \"common\"),   version = latest_version(),   prov = prov_cache() )"},{"path":"https://docs.ropensci.org/taxadb/reference/tl_import.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import taxonomic database tables — tl_import","text":"provider provider hierarchy returned? Default 'itis', can also configured using options(default_taxadb_provider=...\"). See [td_create] list recognized providers. schema One \"dwc\" (Darwin Core data) \"common\" (Common names table.) version version taxadb provider database use? defaults latest.  See tl_import details. prov Address (URL) provenance record","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/tl_import.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import taxonomic database tables — tl_import","text":"path(s) downloaded files cache","code":""},{"path":"https://docs.ropensci.org/taxadb/reference/tl_import.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import taxonomic database tables — tl_import","text":"tl_import parses schema.org record determine correct version download. offline, tl_import attempt resolve provenance cache. Users can also examine / parse prov JSON-LD file directly determine provenance data products used.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/taxadb/news/index.html","id":"taxadb-021","dir":"Changelog","previous_headings":"","what":"taxadb 0.2.1","title":"taxadb 0.2.1","text":"CRAN release: 2023-03-08 substantial speed improvements filter_* get_* functions streamline legacy code filter_* get_* functions better leverage duckdb speed increase get_names get_ids now use argument name, provider, specify naming provider, rather db (used taxize::get_ids)","code":""},{"path":"https://docs.ropensci.org/taxadb/news/index.html","id":"taxadb-020","dir":"Changelog","previous_headings":"","what":"taxadb 0.2.0","title":"taxadb 0.2.0","text":"CRAN release: 2023-02-14 taxadb now backed partitioned parquet files, cached locally contentid taxadb now fully-duckdb based. deprecates previous ‘pluggable’ backend options use RSQLite database backend. Parquet-backed option means even initial import much faster, leaving need use inferior backend options. mutate_db deprecated, dplyr::mutate() work anticipated. metadata/prov archive now based schema.org rather DCAT2 includes 22.12 release name providers col, itis, ncbi, ott, gbif. database name providers currently deprecated (though least iucn restored soon).","code":""},{"path":"https://docs.ropensci.org/taxadb/news/index.html","id":"taxadb-016","dir":"Changelog","previous_headings":"","what":"taxadb 0.1.6","title":"taxadb 0.1.6","text":"CRAN release: 2022-09-14 bugfix recent duckdb release. (imported table names now prefixed “v” avoid names start numbers)","code":""},{"path":"https://docs.ropensci.org/taxadb/news/index.html","id":"taxadb-015","dir":"Changelog","previous_headings":"","what":"taxadb 0.1.5","title":"taxadb 0.1.5","text":"CRAN release: 2022-05-03 bugfix upcoming dbplyr release","code":""},{"path":"https://docs.ropensci.org/taxadb/news/index.html","id":"taxadb-014","dir":"Changelog","previous_headings":"","what":"taxadb 0.1.4","title":"taxadb 0.1.4","text":"CRAN release: 2022-03-05 bugfix get_ids() multiple English common names accepted species. export taxadb_dir(), making easier purge DB duckdb upgrades imports must used Improve testing db=NULL case. Require R.utils, ensure compressed files can expanded","code":""},{"path":"https://docs.ropensci.org/taxadb/news/index.html","id":"taxadb-013","dir":"Changelog","previous_headings":"","what":"taxadb 0.1.3","title":"taxadb 0.1.3","text":"CRAN release: 2021-04-27 robust testing","code":""},{"path":"https://docs.ropensci.org/taxadb/news/index.html","id":"taxadb-012","dir":"Changelog","previous_headings":"","what":"taxadb 0.1.2","title":"taxadb 0.1.2","text":"CRAN release: 2021-03-15 avoid erroneous messages installing providers lack common names.","code":""},{"path":"https://docs.ropensci.org/taxadb/news/index.html","id":"taxadb-011","dir":"Changelog","previous_headings":"","what":"taxadb 0.1.1","title":"taxadb 0.1.1","text":"CRAN release: 2021-02-25 introduce tl_import import taxonomic databases [#79] make duckdb default backend bugfix possible ordering problem get_names [#78] Added NEWS.md file track changes package.","code":""}]
